{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "data": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName" : { "Fn::Join" :  [ "-", [ { "Ref" : "AWS::StackName" }, "data" ] ] },
        "AttributeDefinitions": [
          {
            "AttributeName": "acc",
            "AttributeType": "S"
          },
          {
            "AttributeName": "dataset",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "acc",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "dataset",
            "KeyType" : "RANGE"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "4",
          "WriteCapacityUnits": "1"
        }
      }
    },
    "SplitQueue" : {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": { "Fn::Join" :  [ "-", [ { "Ref" : "AWS::StackName" }, "SplitQueue" ] ] },
        "VisibilityTimeout": "300"
      }
    },
    "splitFiles" : {
      "Type" : "AWS::Lambda::Function",
      "Properties" : {
        "Code" : {
          "ZipFile": { "Fn::Join": ["", [
            "exports.splitFile = function(event, context) {",
            "  context.succeed('OK');",
            "};"
          ]]}
        },
        "Description" : "splitFiles",
        "Handler" : "index.splitFile",
        "Role" : {"Fn::GetAtt" : ["LambdaSplitFilesRole", "Arn"] },
        "Runtime" : "nodejs4.3",
        "MemorySize" : 256,
        "Timeout" : 300
      },
      "DependsOn" : "LambdaSplitFilesRole"
    },
    "runSplitQueue" : {
      "Type" : "AWS::Lambda::Function",
      "Properties" : {
        "Code" : {
          "ZipFile": { "Fn::Join": ["", [
            "exports.runSplitQueue = function(event, context) {",
            "  context.succeed('OK');",
            "};"
          ]]}
        },
        "Description" : "runSplitQueue",
        "Handler" : "index.runSplitQueue",
        "Role" : {"Fn::GetAtt" : ["LambdaRunSplitQueueRole", "Arn"] },
        "Runtime" : "nodejs4.3",
        "MemorySize" : 512,
        "Timeout" : 300
      },
      "DependsOn" : "LambdaRunSplitQueueRole"
    },
    "readAllData" : {
      "Type" : "AWS::Lambda::Function",
      "Properties" : {
        "Code" : {
          "ZipFile": { "Fn::Join": ["", [
            "exports.splitFile = function(event, context) {",
            "  context.succeed('OK');",
            "};"
          ]]}
        },
        "Description" : "readAllData",
        "Handler" : "index.readAllData",
        "Role" : {"Fn::GetAtt" : ["LambdaReadAllDataRole", "Arn"] },
        "Runtime" : "nodejs4.3",
        "MemorySize" : 1024,
        "Timeout" : 3
      },
      "DependsOn" : "LambdaReadAllDataRole"
    },
    "LambdaSplitFilesRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns" : [ {"Ref" : "WriteSplitQueue" }, { "Ref" : "ReadUploaded" },{ "Ref" : "ReadDatasets" },{ "Ref" : "WriteDatasets" }],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
      }
    },
    "LambdaRunSplitQueueRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns" : [ {"Ref" : "RegisterEvents"}, {"Ref" : "UpdateDataTableCapacity"}, {"Ref" : "ConsumeSplitQueue" }, {"Ref" : "WriteSplitQueue" }, { "Ref" : "ReadUploaded" },{ "Ref" : "ReadDatasets" },{ "Ref" : "WriteDatasets" }],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
      }
    },
    "LambdaRunSplitQueueInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName" : { "Fn::GetAtt" : ["runSplitQueue", "Arn"] },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn" : {"Fn::Join": [":", [ "arn:aws:events", { "Ref" : "AWS::Region" } , {"Ref" : "AWS::AccountId" }, "rule/runSplitQueue"]] }
      },
      "Metadata" : {
        "Comment" : "Queue runner for splitting files"
      }
    },
    "LambdaRunSplitQueueInvokeScheduleSplitQueuePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName" : { "Fn::GetAtt" : ["runSplitQueue", "Arn"] },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn" : {"Fn::Join": [":", [ "arn:aws:events", { "Ref" : "AWS::Region" } , {"Ref" : "AWS::AccountId" }, "rule/scheduleSplitQueue"]] }
      },
      "Metadata" : {
        "Comment" : "Scheduler for the runner to split files"
      }
    },
    "dataBucket": {
      "Type" : "AWS::S3::Bucket",
      "Properties" : {
        "BucketName" : {"Fn::Join": ["", [{ "Ref" : "AWS::StackName" }, "-gator"]] },
        "NotificationConfiguration" : {
        "LambdaConfigurations" : [ {
          "Event" : "s3:ObjectCreated:*",
          "Filter" : { "S3Key" : { "Rules" : [ {"Name" : "prefix", "Value" : "uploads/"} ] }},
          "Function" : { "Fn::GetAtt": [ "splitFiles", "Arn" ]}
        },{
          "Event" : "s3:ObjectRemoved:*",
          "Filter" : { "S3Key" : { "Rules" : [ {"Name" : "prefix", "Value" : "uploads/"} ] }},
          "Function" : { "Fn::GetAtt": [ "splitFiles", "Arn" ]}
        }]
        }
      },
      "DependsOn" : [ "splitFiles", "GatorUploadsPermission" ]
    },
    "GatorUploadsPermission": {
        "Type" : "AWS::Lambda::Permission",
        "Properties" : {
            "Action":"lambda:invokeFunction",
            "FunctionName": { "Fn::GetAtt": [ "splitFiles", "Arn" ]},
            "Principal": "s3.amazonaws.com",
            "SourceAccount": {"Ref" : "AWS::AccountId" },
            "SourceArn": {
                "Fn::Join": ["", [
                    "arn:aws:s3:::"
                     ,{ "Ref" : "AWS::StackName" }, "-gator"]]
            }
        },
        "DependsOn" : "splitFiles"
    },
    "LambdaReadAllDataRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns" : [ { "Ref" : "ReadDatasets" }],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            },
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
      }
    },
    "GatordataLogWriterPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties" : {
        "PolicyName" : "GatordataLogWriterPolicy",
        "PolicyDocument" : {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ],
                "Resource": "arn:aws:logs:*:*:*"
              }
            ]
        },
        "Roles" : [ { "Ref" : "LambdaSplitFilesRole" }, {"Ref" : "LambdaReadAllDataRole"}, {"Ref" : "LambdaRunSplitQueueRole"} ]
      },
      "DependsOn" : ["LambdaSplitFilesRole","LambdaReadAllDataRole","LambdaRunSplitQueueRole"]
    },
    "ReadUploaded": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties" : {
        "Description" : "Read data uploaded to gator",
        "PolicyDocument" : {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": [
                { "Fn::Join" :  [ "", [ "arn:aws:s3:::", { "Ref" : "AWS::StackName" }, "-gator/uploads/*" ] ] }
              ]
            }
          ]
        }
      }
    },
    "WriteDatasets": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties" : {
        "Description" : "Write split json files",
        "PolicyDocument" : {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject",
                "s3:DeleteObject"
              ],
              "Resource": [
                { "Fn::Join" :  [ "", [ "arn:aws:s3:::", { "Ref" : "AWS::StackName" }, "-gator/data/latest/*" ] ] }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:ListBucket"
              ],
              "Resource": [
                { "Fn::Join" :  [ "", [ "arn:aws:s3:::", { "Ref" : "AWS::StackName" }, "-gator" ] ] }
              ],
              "Condition": {"StringLike":{"s3:prefix":["data/latest/*"]}}
            },
            {
              "Effect": "Allow",
              "Action": [
                  "dynamodb:BatchWriteItem",
                  "dynamodb:PutItem",
                  "dynamodb:UpdateItem",
                  "dynamodb:GetItem"
              ],
              "Resource": { "Fn::Join" :  [ "", [ "arn:aws:dynamodb:", { "Ref" : "AWS::Region" }, ":", { "Ref" : "AWS::AccountId" } ,":table/", { "Ref" : "data" } ] ]}
            }
          ]
        }
      }
    },
    "ReadDatasets": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties" : {
        "Description" : "Read datasets",
        "PolicyDocument" : {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": [
                { "Fn::Join" :  [ "", [ "arn:aws:s3:::", { "Ref" : "AWS::StackName" }, "-gator/data/latest/*" ] ] }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                  "dynamodb:GetItem",
                  "dynamodb:Query"
              ],
              "Resource": { "Fn::Join" :  [ "", [ "arn:aws:dynamodb:", { "Ref" : "AWS::Region" }, ":", { "Ref" : "AWS::AccountId" } ,":table/", { "Ref" : "data" } ] ]}
            }
          ]
        }
      }
    },
    "ConsumeSplitQueue": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties" : {
        "Description" : "ConsumeSplitQueue",
        "PolicyDocument" : {
            "Id" : "ConsumeSplitQueue",
            "Version": "2012-10-17",
            "Statement": [
                {
                  "Sid": "ConsumeSplitQueueSQS",
                  "Effect": "Allow",
                  "Action": [ "sqs:ReceiveMessage", "sqs:GetQueueUrl","sqs:ChangeMessageVisibility", "sqs:DeleteMessage", "sqs:GetQueueAttributes" ],
                  "Resource" : { "Fn::GetAtt" : ["SplitQueue","Arn"]}
                }
            ]
        }
      },
      "DependsOn": "SplitQueue"
    },
    "WriteSplitQueue": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties" : {
        "Description" : "WriteSplitQueue",
        "PolicyDocument" : {
            "Version": "2012-10-17",
            "Statement": [
                {
                  "Sid": "WriteSplitQueue",
                  "Effect": "Allow",
                  "Action": "sqs:SendMessage",
                  "Resource" : { "Fn::GetAtt" : ["SplitQueue","Arn"]}
                }
            ]
        }
      },
      "DependsOn": "DownloadQueue"
    },
    "UpdateDataTableCapacity": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties" : {
        "Description" : "Update capacity for writing to data table",
        "PolicyDocument" : {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                  "dynamodb:UpdateTable"
              ],
              "Resource": { "Fn::Join" :  [ "", [ "arn:aws:dynamodb:", { "Ref" : "AWS::Region" }, ":", { "Ref" : "AWS::AccountId" } ,":table/", { "Ref" : "data" } ] ]}
            }
          ]
        }
      }
    },
    "RegisterEvents": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties" : {
        "Description" : "RegisterEvents",
        "PolicyDocument" : {
            "Version": "2012-10-17",
            "Statement": [
                {
                  "Sid": "RegisterEvents",
                  "Effect": "Allow",
                  "Action": [ "events:PutRule", "events:ListRules", "events:PutTargets" ],
                  "Resource" : "*"
                }
            ]
        }
      }
    }
  },
  "Outputs": {
  }
}